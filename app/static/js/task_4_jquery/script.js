$(function () {
    $(".js-countdown")
        .countdown("2021/01/01", function(event) {
            $(this).text(
                event.strftime('–î–æ 2021 –≥–æ–¥–∞: %D –¥–Ω–µ–π  %H:%M:%S')
            );
        });

    $('[data-toggle="popover"]').popover();
    $('[data-toggle="tooltip"]').tooltip();

    $(".js-click").on("click", function () {
        let text = "–í—ã —Å–¥–µ–ª–∞–ª–∏ –∫–ª–∏–∫!"
        let click_counts = $(this).data("click-counts")
        if (click_counts === undefined) {
            $(".js-click").data("click-counts", 1)
        }
        if (click_counts > 0) {
            click_counts++;
            text = "–í—ã —Å–¥–µ–ª–∞–ª–∏ –µ—â–µ –æ–¥–∏–Ω –∫–ª–∏–∫!"
            if (click_counts > 2) {
                text = "–í—ã —Å–¥–µ–ª–∞–ª–∏ –∫–ª–∏–∫–æ–≤: " + click_counts;
                if (click_counts > 10 && click_counts <= 20) {
                    text += " üò¶";
                } else if (click_counts > 20 && click_counts <= 30) {
                    text += " üò®";
                } else if (click_counts > 30 && click_counts <= 40) {
                    text += " üò±";
                } else if (click_counts > 40) {
                    text += " ü§Ø";
                }
            }
            $(this).data("click-counts", click_counts);
        }
        $(".js-click-text").text(text);
    });

    $(".js-new-blocks")
        .on("click", ".js-add-block", function () {
            let newBlockText = "üéâ –£—Ä–∞! –ù–æ–≤—ã–π –±–ª–æ–∫! –ö–ª–∏–∫–Ω–∏—Ç–µ, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ.";
            let newBlock = $(".js-block-copy").clone();
            newBlock.removeClass("hidden").removeClass("js-block-copy");
            newBlock.find(".content").text(newBlockText);
            $(".js-new-blocks").append(newBlock);
        })
        .on("click", ".js-change-block", function () {
            let texts = [
                "–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç! üëè –ö–ª–∏–∫–Ω–∏—Ç–µ –µ—â–µ —Ä–∞–∑.",
                "–¢–µ–∫—Å—Ç –æ–±–Ω–æ–≤–∏–ª—Å—è! üéä –ù–∞–∂–º–∏—Ç–µ –µ—â–µ —Ä–∞–∑.",
                "–ù–æ–≤–∞—è –Ω–∞–¥–ø–∏—Å—å! ü•≥ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–ª–∏–Ω—É—Ç—å –µ—â–µ —Ä–∞–∑.",
                "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞! üëç –ù–∞–∂–º–∏—Ç–µ –µ—â–µ —Ä–∞–∑.",
                "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–º–µ–Ω—è–ª–æ—Å—å! üéâ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –µ—â–µ —Ä–∞–∑.",
            ];
            $(this).text(texts[Math.floor(Math.random() * texts.length)]);
        });

    $(".js-ajax-blocks").on("click", ".js-ajax-block", function () {
        let $this = $(this);
        let address = $(".js-address-value").val();
        setRequestData(address, $this);

        $($this).parent().find($(".js-address-block")).removeClass("hidden")
    }).on("click", ".js-ajax-button", function () {
        let address = $(".js-address-value").val();
        let $this = $(this).parents(".js-ajax-blocks").find(".js-ajax-block");
        setRequestData(address, $this);
    });
});

function setRequestData(query, element) {
    if (!query) {
        return
    }
    $.ajax({
        type: "GET",
        url: "http://api.openweathermap.org/data/2.5/weather",
        data: {
            q: query,
            lang: "ru",
            units: "metric",
            appid: "357c6ac11b2a3242c68fb28b6b0f050f",
        },
        success: function (data) {
            $(element).html(parseAPIWeatherData(data));
        },
        fail: function (data) {
            console.error(data);
        },
    });
}

function parseAPIWeatherData(data) {
    let text = "<p class='lead'>–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ " + data.name + "</p>";
    text += " <p>–°–µ–π—á–∞—Å " + data.weather[0].description + ".<br />";
    text += " –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: " + data.main.temp + "&nbsp;¬∞C.";
    text += " –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: " + data.main.feels_like + "&nbsp;¬∞C.</p>";
    text += "<small class='text-muted'>–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Å–µ—Ä–≤–∏—Å–æ–º www.openweathermap.org</small>";

    return text
}