function handler_click() {
    /* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞ */

    alert('–í—ã –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ –±–ª–æ–∫—É. –°–ø–∞—Å–∏–±–æ!');
}

block_click.addEventListener("click", handler_click);

class BlockMouseDown {
    /* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –∏ –æ—Ç–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏ */

    handleEvent(block_onmousedown) {
        let method = 'on' + block_onmousedown.type[0].toUpperCase() + block_onmousedown.type.slice(1);
        this[method](block_onmousedown);
    }

    onMousedown() {
        block_onmousedown.innerHTML = "–ö–Ω–æ–ø–∫–∞ –º—ã—à–∏ –Ω–∞–∂–∞—Ç–∞";
    }

    onMouseup() {
        block_onmousedown.innerHTML += "...–∏ –æ—Ç–∂–∞—Ç–∞";
    }
}

let blockMouseDown = new BlockMouseDown();
block_onmousedown.addEventListener('mousedown', blockMouseDown);
block_onmousedown.addEventListener('mouseup', blockMouseDown);

class BlockMouseOver {
    /* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è –∫—É—Ä—Å–æ—Ä–∞ –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç */

    handleEvent(block_onmouseover) {
        let method = 'on' + block_onmouseover.type[0].toUpperCase() + block_onmouseover.type.slice(1);
        this[method](block_onmouseover);
    }

    onMouseover() {
        block_onmouseover.innerHTML = "–ö—É—Ä—Å–æ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–≤–µ—Ä—Ö –±–ª–æ–∫–∞";
    }

    onMouseout() {
        block_onmouseover.innerHTML += "...—Ç–µ–ø–µ—Ä—å –∫—É—Ä—Å–æ—Ä –≤–Ω–µ –±–ª–æ–∫–∞";
    }
}

let blockMouseOver = new BlockMouseOver();
block_onmouseover.addEventListener("mouseover", blockMouseOver);
block_onmouseover.addEventListener("mouseout", blockMouseOver);

function handler_block_add() {
    /* –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞ */

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞
    let newBlock = document.createElement('div');
    let newBlockText = "üéâ –£—Ä–∞! –ù–æ–≤—ã–π –±–ª–æ–∫! –ö–ª–∏–∫–Ω–∏—Ç–µ, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ.";
    newBlock.id = "block_change";
    newBlock.className = "col-lg-6 rounded text-center m-4 p-4 shadow pointer";
    newBlock.innerHTML = newBlockText;

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞
    let newBlocks = document.getElementById('new_blocks');
    new_blocks.appendChild(newBlock);
}

block_add.addEventListener("click", handler_block_add);

function handler_block_change(element) {
    /* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–ª–æ–∫–∞ */

    let texts = [
        "–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç! üëè –ö–ª–∏–∫–Ω–∏—Ç–µ –µ—â–µ —Ä–∞–∑.",
        "–¢–µ–∫—Å—Ç –æ–±–Ω–æ–≤–∏–ª—Å—è! üéä –ù–∞–∂–º–∏—Ç–µ –µ—â–µ —Ä–∞–∑.",
        "–ù–æ–≤–∞—è –Ω–∞–¥–ø–∏—Å—å! ü•≥ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–ª–∏–Ω—É—Ç—å –µ—â–µ —Ä–∞–∑.",
        "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞! üëç –ù–∞–∂–º–∏—Ç–µ –µ—â–µ —Ä–∞–∑.",
        "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–º–µ–Ω—è–ª–æ—Å—å! üéâ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –µ—â–µ —Ä–∞–∑.",
    ];
    element.innerHTML = texts[Math.floor(Math.random() * texts.length)];
}

document.addEventListener('click', function (e) {
    if (e.target && e.target.id == 'block_change') {
        handler_block_change(e.target);
    }
});

function handler_block_matrix(element) {
    /* –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã —É–º–Ω–æ–∂–µ–Ω–∏—è */

    let space = 5;
    element.innerHTML = "–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è<br /><br />";
    for (let i = 1; i < 10; i++) {
        for (let j = 1; j < 10; j++) {

            element.innerHTML += String(i * j).padStart(space, String.fromCharCode(160)) + " ";
        }
        element.innerHTML += "<br />";
    }
    element.innerHTML += "<small class='text-muted'>–¶–∏–∫–ª ¬´for¬ª</small>";

}

block_calculations.addEventListener("click", function (e) {
    handler_block_matrix(e.target);
});

function handler_block_while(element) {
    /* –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */

    element.innerHTML = "–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏";
    element.innerHTML += "<p><small class='text-muted'>–¶–∏–∫–ª ¬´while¬ª</small></p>";

    let i = 1;
    while (i < 4) {
        alert("–°–æ–æ–±—â–µ–Ω–∏–µ ‚Ññ" + i + ".");
        i++;
    }
}

block_while.addEventListener("click", function (e) {
    handler_block_while(e.target);
});

function handler_block_dowhile(element) {
    /* –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ */

    element.innerHTML = "–ê —Ç–µ–ø–µ—Ä—å –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ üôÇ";
    element.innerHTML += "<p><small class='text-muted'>–¶–∏–∫–ª ¬´do..while¬ª</small></p>";

    let i = 3;
    do {
        alert("–°–æ–æ–±—â–µ–Ω–∏–µ ‚Ññ" + i + ".");
        i--;
    } while (i > 0);
}

block_dowhile.addEventListener("click", function (e) {
    handler_block_dowhile(e.target);
});

function handler_block_foreach(element) {
    /* –ü–µ—Ä–µ–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */

    element.innerHTML = "–ü–µ—Ä–µ–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤";
    element.innerHTML += "<p><small class='text-muted'>–¶–∏–∫–ª ¬´forEach¬ª –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è</small></p>";

    let group = {
        title: "–°—Ç—É–¥–µ–Ω—Ç –Ω–∞—à–µ–π –≥—Ä—É–ø–ø—ã",
        students: ["–ü–µ—Ç—Ä–æ–≤ –ü.–í.", "–ò–≤–∞–Ω–æ–≤ –§.–ò.", "–°–∏–¥–æ—Ä–æ–≤ –ê.–ü."],

        getList() {
            this.students.forEach(
                student => alert(this.title + ': ' + student)
            );
        }
    };
    group.getList();
}

block_foreach.addEventListener("click", function (e) {
    handler_block_foreach(e.target);
});

function handler_block_map(element) {
    /* –ü–µ—Ä–µ–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */

    element.innerHTML = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö";
    element.innerHTML += "<p><small class='text-muted'>–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ - ¬´Map¬ª, —Ü–∏–∫–ª ¬´for..of¬ª –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è</small></p>";

    let studentsMap = new Map([
        [
            "petrov", {
            name: "–ü–µ—Ç—Ä–æ–≤ –ü.–í.",
            group: "–ü–ò-18–£",
        }
        ],
        [
            "ivanov", {
            name: "–ò–≤–∞–Ω–æ–≤ –§.–ò.",
            group: "–ü–ò-18–í",
        }
        ],
        [
            "sidorov", {
            name: "–°–∏–¥–æ—Ä–æ–≤ –ê.–ü.",
            group: "–ü–ò-20–°–í",
        }
        ],
    ]);
    // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    studentsMap.set("vasechkin", {
        name: "–í–∞—Å–µ—á–∫–∏–Ω –í.–ê.",
        group: "–ü–ò-20–°",
    });
    // –∏–∑–º–µ–Ω–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    studentsMap.set("ivanov", {
        group: "–ü–ò-20–°",
        name: "–ò–≤–∞–Ω–æ–≤ –§.–ò.",
    });

    let names = [];
    for (item of studentsMap) {
        alert("–ö–ª—é—á —ç–ª–µ–º–µ–Ω—Ç–∞: '" + item[0] + "'. –î–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç–∞: –≥—Ä—É–ø–ø–∞ - " + item[1].group + ", –∏–º—è - " + item[1].name);
        names.push(item[1]);
    }

    alert("–ò–º–µ–Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: " + names.map(item => item.name));
}

block_map.addEventListener("click", function (e) {
    handler_block_map(e.target);
});
